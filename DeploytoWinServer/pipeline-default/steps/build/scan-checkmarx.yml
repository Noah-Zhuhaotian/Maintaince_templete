jobs:
  #Begin code scan
  - job: ScanCheckmarx
    pool:
      vmImage: 'windows-latest'
    steps:
      #Begin Checkmarx
      - task: checkmarx.cxsast.cx-scan-task.Application security testing@2022
        condition: and(succeeded(), eq(variables['enableCheckmarx'], 'true'))
        displayName: 'Checkmarx scan'
        inputs:
          CheckmarxService: Checkmarx
          projectName: '$(appNumber)-$(serviceName)'
          preset: 'High and Medium'
          fullTeamName: 'Replace\your\checkmars\$(checkmarxGroup)' # Replace with your Checkmarx name
          folderExclusion: 'cvs, .svn, .hg , .git, .bzr, bin , obj,  backup, .idea, node_modules, packages, dist'
          fileExtension: '!*.DS_Store, !*.ipr,     !*.iws, !*.bak,    !*.tmp,     !*.aac,      !*.aif,      !*.iff,     !*.m3u,   !*.mid,   !*.mp3, !*.mpa,    !*.ra,        !*.wav,      !*.wma,      !*.3g2,     !*.3gp,   !*.asf,   !*.asx, !*.avi,    !*.flv,       !*.mov,     !*.mp4,      !*.mpg,     !*.rm,    !*.swf,   !*.vob, !*.wmv,    !*.bmp,       !*.gif,       !*.jpg,      !*.png,     !*.psd,   !*.tif,   !*.swf, !*.jar,    !*.zip,       !*.rar,      !*.exe,      !*.dll,     !*.pdb,   !*.7z,    !*.gz, !*.tar.gz, !*.tar,       !*.gz,       !*.ahtm,     !*.ahtml,   !*.fhtml, !*.hdm, !*.hdml,   !*.hsql,      !*.ht,      !*.hta,      !*.htc,     !*.htd,   !*.war,   !*.ear, !*.htmls,  !*.ihtml,     !*.mht,      !*.mhtm,     !*.mhtml,   !*.ssi,   !*.stm, !*.stml,   !*.ttml,      !*.txn,      !*.xhtm,     !*.xhtml,   !*.class, !*.iml, !.gitignore'
        continueOnError: true
      - task: PowerShell@2
        condition: and(succeeded(), eq(variables['enableCheckmarx'], 'true'))
        displayName: 'send checkmarx scan log'
        inputs:
          targetType: 'filePath'
          filePath: $(serviceName)/release/scripts/sendCheckmarxScanLog.ps1
          arguments: '-repositoryProjectName $(repositoryProjectName) -RepositoryName $(repositoryName) -appName $(appName) -ServiceName $(serviceName) -SYSTEM_ACCESSTOKEN $(System.AccessToken) -BuildID $(Build.BuildID) -repositoryCallbackUrl $(repositoryCallbackUrl) -portalClientId $(portalClientId) -portalClientKey $(portalClientKey)'
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)
        continueOnError: true
      #End Checkmarx
      
#End code scan
