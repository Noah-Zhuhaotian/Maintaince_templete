parameters:
  jobEnv: '$(jobEnv)'
  serviceEndpointName: '$(serviceEndpointName)'
  sqlServiceEndpointName: '$(sqlServiceEndpointName)'
  keyVaultName: '$(keyVaultName)'

jobs:
  - deployment: DeployTodoApi
    displayName: Deploy TodoApi
    pool:
      vmImage: 'windows-latest'
    environment: ${{ parameters.jobEnv }}
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: '$(serviceName)'
                downloadPath: '$(System.DefaultWorkingDirectory)'
            
            - task: AzureKeyVault@2
              displayName: 'Download secrets from KeyVault'
              inputs:
                azureSubscription: '${{ parameters.serviceEndpointName }}'
                KeyVaultName: '${{ parameters.keyVaultName }}'
                SecretsFilter: 'TodoApi-ConnectionString,TodoApi-AppInsightKey'
                RunAsPreJob: false

            - task: AzureRmWebAppDeployment@4
              displayName: 'Deploy TodoApi to Azure App Service'
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: '${{ parameters.serviceEndpointName }}'
                appType: 'webApp'
                WebAppName: '$(resourceName)'
                packageForLinux: '$(System.DefaultWorkingDirectory)/$(serviceName)/todoApiPkg.zip'
                AppSettings: >
                  -ConnectionStrings:DefaultConnection "$(TodoApi-ConnectionString)" 
                  -ApplicationInsights:InstrumentationKey "$(TodoApi-AppInsightKey)"
                  -WEBSITE_RUN_FROM_PACKAGE "1"
            
            - task: SqlAzureDacpacDeployment@1
              displayName: 'Deploy database if needed'
              inputs:
                azureSubscription: '${{ parameters.sqlServiceEndpointName }}'
                AuthenticationType: 'connectionString'
                ConnectionString: '$(TodoApi-ConnectionString)'
                deployType: 'SqlTask'
                SqlFile: '$(System.DefaultWorkingDirectory)/$(serviceName)/sql/deploy.sql'
                IpDetectionMethod: 'AutoDetect'