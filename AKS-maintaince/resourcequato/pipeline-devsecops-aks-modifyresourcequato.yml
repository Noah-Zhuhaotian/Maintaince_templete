trigger:
  - none

pool:
  name: WindowsDevOps

# Replace "xxxx" with your each AKS environment name
# Replace "xxxxxxxxx-dev" with your namespace of your applincation on AKS cluster
# Replace "xxxxxresourcequota" with your resource quota name


parameters:
  - name: ResourceQuota
    displayName: ResourceQuota
    type: string
    default: xxxxxresourcequota
    values:
    - xxxxxresourcequota
    - xxxxxresourcequota
    - xxxxxresourcequota

  - name: namespace
    displayName: namespace
    type: string
    default: 'xxxxxxxxx-dev'

  - name: EnvName
    displayName: EnvName
    type: string
    default: xxxx
    values:
    - xxxx
    - xxxx
    - xxxx

  - name: ChangeNumber
    displayName: ChangeNumber
    type: string
    default: 'CHG0000000'

variables:
- group: AKS-vargroup
- template: ../vars/var-${{ parameters.EnvName }}.yml

stages:
  - stage: Modify_${{ parameters.EnvName }}_ResourceQuota
    jobs:
      - job: ValidateResourceQuota
        displayName: Validate ResourceQuota
        steps:
        - task: Kubernetes@1
          name: Getresourcequotaname
          displayName: Validate ResourceQuota
          inputs:
            connectionType: Kubernetes Service Connection
            kubernetesServiceEndpoint: ${{ variables.serviceEndpointName }}
            namespace: ${{ parameters.namespace }}
            command: get
            arguments: resourcequota
            outputFormat: jsonpath='{.items[*].metadata.name}'
        
        - task: PowerShell@2
          displayName: 'Set variable'
          name: setvariable
          inputs:
            targetType: 'inline'
            script: |
              $a1=$(Getresourcequotaname.KubectlOutput)
              $a1=$a1.Trim(",").replace(","," ").replace("  "," ").Trim()
              echo $a1
              Write-Host "##vso[task.setvariable variable=currentresourcequota;isOutput=true]$a1"

      - job: DeleteOldresourcequota
        displayName: Delete Old resourcequota
        dependsOn: ValidateResourceQuota
        condition: not(eq(dependencies.ValidateResourceQuota.outputs['setvariable.currentresourcequota'], ''))
        variables:
          Oldresourcequotanames: $[ dependencies.ValidateResourceQuota.outputs['setvariable.currentresourcequota'] ]
        steps:
        - task: Kubernetes@1
          displayName: Delete Old resourcequota
          inputs:
            connectionType: Kubernetes Service Connection
            kubernetesServiceEndpoint: ${{ variables.serviceEndpointName }}
            namespace: ${{ parameters.namespace }}
            command: delete
            arguments: resourcequota $(Oldresourcequotanames)

      - job: Deploy_${{ parameters.ResourceQuota }}
        displayName: Deploy ${{ parameters.ResourceQuota }}
        dependsOn: 
          - ValidateResourceQuota
          - DeleteOldresourcequota
        condition: and(not(failed()), not(canceled()))
        steps:
        - task: Kubernetes@1
          displayName: Deploy ${{ parameters.ResourceQuota }}
          inputs:
            connectionType: Kubernetes Service Connection
            kubernetesServiceEndpoint: ${{ variables.serviceEndpointName }}
            command: apply
            useConfigurationFile: true
            configurationType: inline
            inline: |
              apiVersion: v1
              kind: ResourceQuota
              metadata:
                name: ${{ parameters.ResourceQuota }}
                namespace: ${{ parameters.namespace }}
              spec:
                hard:
                  limits.cpu: $(${{ parameters.ResourceQuota }}_cpu_limit)
                  limits.memory: $(${{ parameters.ResourceQuota }}_mem_limit)




